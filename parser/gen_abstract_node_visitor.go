/*----------------------------------------------------------------------------*/
/* This file is generated by the templates/template.rb script and should not  */
/* be modified manually. See                                                  */
/* templates/../../templates/gen_abstract_node_visitor.go.erb                 */
/* if you are looking to modify the                                           */
/* template                                                                   */
/*----------------------------------------------------------------------------*/

package parser

type AbstractNodeVisitor interface {
	DefaultVisit(node Node)

	visitAliasGlobalVariableNode(node *AliasGlobalVariableNode)

	visitAliasMethodNode(node *AliasMethodNode)

	visitAlternationPatternNode(node *AlternationPatternNode)

	visitAndNode(node *AndNode)

	visitArgumentsNode(node *ArgumentsNode)

	visitArrayNode(node *ArrayNode)

	visitArrayPatternNode(node *ArrayPatternNode)

	visitAssocNode(node *AssocNode)

	visitAssocSplatNode(node *AssocSplatNode)

	visitBackReferenceReadNode(node *BackReferenceReadNode)

	visitBeginNode(node *BeginNode)

	visitBlockArgumentNode(node *BlockArgumentNode)

	visitBlockLocalVariableNode(node *BlockLocalVariableNode)

	visitBlockNode(node *BlockNode)

	visitBlockParameterNode(node *BlockParameterNode)

	visitBlockParametersNode(node *BlockParametersNode)

	visitBreakNode(node *BreakNode)

	visitCallAndWriteNode(node *CallAndWriteNode)

	visitCallNode(node *CallNode)

	visitCallOperatorWriteNode(node *CallOperatorWriteNode)

	visitCallOrWriteNode(node *CallOrWriteNode)

	visitCallTargetNode(node *CallTargetNode)

	visitCapturePatternNode(node *CapturePatternNode)

	visitCaseMatchNode(node *CaseMatchNode)

	visitCaseNode(node *CaseNode)

	visitClassNode(node *ClassNode)

	visitClassVariableAndWriteNode(node *ClassVariableAndWriteNode)

	visitClassVariableOperatorWriteNode(node *ClassVariableOperatorWriteNode)

	visitClassVariableOrWriteNode(node *ClassVariableOrWriteNode)

	visitClassVariableReadNode(node *ClassVariableReadNode)

	visitClassVariableTargetNode(node *ClassVariableTargetNode)

	visitClassVariableWriteNode(node *ClassVariableWriteNode)

	visitConstantAndWriteNode(node *ConstantAndWriteNode)

	visitConstantOperatorWriteNode(node *ConstantOperatorWriteNode)

	visitConstantOrWriteNode(node *ConstantOrWriteNode)

	visitConstantPathAndWriteNode(node *ConstantPathAndWriteNode)

	visitConstantPathNode(node *ConstantPathNode)

	visitConstantPathOperatorWriteNode(node *ConstantPathOperatorWriteNode)

	visitConstantPathOrWriteNode(node *ConstantPathOrWriteNode)

	visitConstantPathTargetNode(node *ConstantPathTargetNode)

	visitConstantPathWriteNode(node *ConstantPathWriteNode)

	visitConstantReadNode(node *ConstantReadNode)

	visitConstantTargetNode(node *ConstantTargetNode)

	visitConstantWriteNode(node *ConstantWriteNode)

	visitDefNode(node *DefNode)

	visitDefinedNode(node *DefinedNode)

	visitElseNode(node *ElseNode)

	visitEmbeddedStatementsNode(node *EmbeddedStatementsNode)

	visitEmbeddedVariableNode(node *EmbeddedVariableNode)

	visitEnsureNode(node *EnsureNode)

	visitFalseNode(node *FalseNode)

	visitFindPatternNode(node *FindPatternNode)

	visitFlipFlopNode(node *FlipFlopNode)

	visitFloatNode(node *FloatNode)

	visitForNode(node *ForNode)

	visitForwardingArgumentsNode(node *ForwardingArgumentsNode)

	visitForwardingParameterNode(node *ForwardingParameterNode)

	visitForwardingSuperNode(node *ForwardingSuperNode)

	visitGlobalVariableAndWriteNode(node *GlobalVariableAndWriteNode)

	visitGlobalVariableOperatorWriteNode(node *GlobalVariableOperatorWriteNode)

	visitGlobalVariableOrWriteNode(node *GlobalVariableOrWriteNode)

	visitGlobalVariableReadNode(node *GlobalVariableReadNode)

	visitGlobalVariableTargetNode(node *GlobalVariableTargetNode)

	visitGlobalVariableWriteNode(node *GlobalVariableWriteNode)

	visitHashNode(node *HashNode)

	visitHashPatternNode(node *HashPatternNode)

	visitIfNode(node *IfNode)

	visitImaginaryNode(node *ImaginaryNode)

	visitImplicitNode(node *ImplicitNode)

	visitImplicitRestNode(node *ImplicitRestNode)

	visitInNode(node *InNode)

	visitIndexAndWriteNode(node *IndexAndWriteNode)

	visitIndexOperatorWriteNode(node *IndexOperatorWriteNode)

	visitIndexOrWriteNode(node *IndexOrWriteNode)

	visitIndexTargetNode(node *IndexTargetNode)

	visitInstanceVariableAndWriteNode(node *InstanceVariableAndWriteNode)

	visitInstanceVariableOperatorWriteNode(node *InstanceVariableOperatorWriteNode)

	visitInstanceVariableOrWriteNode(node *InstanceVariableOrWriteNode)

	visitInstanceVariableReadNode(node *InstanceVariableReadNode)

	visitInstanceVariableTargetNode(node *InstanceVariableTargetNode)

	visitInstanceVariableWriteNode(node *InstanceVariableWriteNode)

	visitIntegerNode(node *IntegerNode)

	visitInterpolatedMatchLastLineNode(node *InterpolatedMatchLastLineNode)

	visitInterpolatedRegularExpressionNode(node *InterpolatedRegularExpressionNode)

	visitInterpolatedStringNode(node *InterpolatedStringNode)

	visitInterpolatedSymbolNode(node *InterpolatedSymbolNode)

	visitInterpolatedXStringNode(node *InterpolatedXStringNode)

	visitItLocalVariableReadNode(node *ItLocalVariableReadNode)

	visitItParametersNode(node *ItParametersNode)

	visitKeywordHashNode(node *KeywordHashNode)

	visitKeywordRestParameterNode(node *KeywordRestParameterNode)

	visitLambdaNode(node *LambdaNode)

	visitLocalVariableAndWriteNode(node *LocalVariableAndWriteNode)

	visitLocalVariableOperatorWriteNode(node *LocalVariableOperatorWriteNode)

	visitLocalVariableOrWriteNode(node *LocalVariableOrWriteNode)

	visitLocalVariableReadNode(node *LocalVariableReadNode)

	visitLocalVariableTargetNode(node *LocalVariableTargetNode)

	visitLocalVariableWriteNode(node *LocalVariableWriteNode)

	visitMatchLastLineNode(node *MatchLastLineNode)

	visitMatchPredicateNode(node *MatchPredicateNode)

	visitMatchRequiredNode(node *MatchRequiredNode)

	visitMatchWriteNode(node *MatchWriteNode)

	visitMissingNode(node *MissingNode)

	visitModuleNode(node *ModuleNode)

	visitMultiTargetNode(node *MultiTargetNode)

	visitMultiWriteNode(node *MultiWriteNode)

	visitNextNode(node *NextNode)

	visitNilNode(node *NilNode)

	visitNoKeywordsParameterNode(node *NoKeywordsParameterNode)

	visitNumberedParametersNode(node *NumberedParametersNode)

	visitNumberedReferenceReadNode(node *NumberedReferenceReadNode)

	visitOptionalKeywordParameterNode(node *OptionalKeywordParameterNode)

	visitOptionalParameterNode(node *OptionalParameterNode)

	visitOrNode(node *OrNode)

	visitParametersNode(node *ParametersNode)

	visitParenthesesNode(node *ParenthesesNode)

	visitPinnedExpressionNode(node *PinnedExpressionNode)

	visitPinnedVariableNode(node *PinnedVariableNode)

	visitPostExecutionNode(node *PostExecutionNode)

	visitPreExecutionNode(node *PreExecutionNode)

	visitProgramNode(node *ProgramNode)

	visitRangeNode(node *RangeNode)

	visitRationalNode(node *RationalNode)

	visitRedoNode(node *RedoNode)

	visitRegularExpressionNode(node *RegularExpressionNode)

	visitRequiredKeywordParameterNode(node *RequiredKeywordParameterNode)

	visitRequiredParameterNode(node *RequiredParameterNode)

	visitRescueModifierNode(node *RescueModifierNode)

	visitRescueNode(node *RescueNode)

	visitRestParameterNode(node *RestParameterNode)

	visitRetryNode(node *RetryNode)

	visitReturnNode(node *ReturnNode)

	visitSelfNode(node *SelfNode)

	visitShareableConstantNode(node *ShareableConstantNode)

	visitSingletonClassNode(node *SingletonClassNode)

	visitSourceEncodingNode(node *SourceEncodingNode)

	visitSourceFileNode(node *SourceFileNode)

	visitSourceLineNode(node *SourceLineNode)

	visitSplatNode(node *SplatNode)

	visitStatementsNode(node *StatementsNode)

	visitStringNode(node *StringNode)

	visitSuperNode(node *SuperNode)

	visitSymbolNode(node *SymbolNode)

	visitTrueNode(node *TrueNode)

	visitUndefNode(node *UndefNode)

	visitUnlessNode(node *UnlessNode)

	visitUntilNode(node *UntilNode)

	visitWhenNode(node *WhenNode)

	visitWhileNode(node *WhileNode)

	visitXStringNode(node *XStringNode)

	visitYieldNode(node *YieldNode)
}

type BaseAbstractNodeVisitor struct{}

func (v *BaseAbstractNodeVisitor) DefaultVisit(node Node) {}

func (v *BaseAbstractNodeVisitor) visitAliasGlobalVariableNode(node *AliasGlobalVariableNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitAliasMethodNode(node *AliasMethodNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitAlternationPatternNode(node *AlternationPatternNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitAndNode(node *AndNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitArgumentsNode(node *ArgumentsNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitArrayNode(node *ArrayNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitArrayPatternNode(node *ArrayPatternNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitAssocNode(node *AssocNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitAssocSplatNode(node *AssocSplatNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitBackReferenceReadNode(node *BackReferenceReadNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitBeginNode(node *BeginNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitBlockArgumentNode(node *BlockArgumentNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitBlockLocalVariableNode(node *BlockLocalVariableNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitBlockNode(node *BlockNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitBlockParameterNode(node *BlockParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitBlockParametersNode(node *BlockParametersNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitBreakNode(node *BreakNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitCallAndWriteNode(node *CallAndWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitCallNode(node *CallNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitCallOperatorWriteNode(node *CallOperatorWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitCallOrWriteNode(node *CallOrWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitCallTargetNode(node *CallTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitCapturePatternNode(node *CapturePatternNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitCaseMatchNode(node *CaseMatchNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitCaseNode(node *CaseNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitClassNode(node *ClassNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitClassVariableAndWriteNode(node *ClassVariableAndWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitClassVariableOperatorWriteNode(node *ClassVariableOperatorWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitClassVariableOrWriteNode(node *ClassVariableOrWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitClassVariableReadNode(node *ClassVariableReadNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitClassVariableTargetNode(node *ClassVariableTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitClassVariableWriteNode(node *ClassVariableWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantAndWriteNode(node *ConstantAndWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantOperatorWriteNode(node *ConstantOperatorWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantOrWriteNode(node *ConstantOrWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantPathAndWriteNode(node *ConstantPathAndWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantPathNode(node *ConstantPathNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantPathOperatorWriteNode(node *ConstantPathOperatorWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantPathOrWriteNode(node *ConstantPathOrWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantPathTargetNode(node *ConstantPathTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantPathWriteNode(node *ConstantPathWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantReadNode(node *ConstantReadNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantTargetNode(node *ConstantTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitConstantWriteNode(node *ConstantWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitDefNode(node *DefNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitDefinedNode(node *DefinedNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitElseNode(node *ElseNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitEmbeddedStatementsNode(node *EmbeddedStatementsNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitEmbeddedVariableNode(node *EmbeddedVariableNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitEnsureNode(node *EnsureNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitFalseNode(node *FalseNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitFindPatternNode(node *FindPatternNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitFlipFlopNode(node *FlipFlopNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitFloatNode(node *FloatNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitForNode(node *ForNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitForwardingArgumentsNode(node *ForwardingArgumentsNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitForwardingParameterNode(node *ForwardingParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitForwardingSuperNode(node *ForwardingSuperNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitGlobalVariableAndWriteNode(node *GlobalVariableAndWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitGlobalVariableOperatorWriteNode(node *GlobalVariableOperatorWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitGlobalVariableOrWriteNode(node *GlobalVariableOrWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitGlobalVariableReadNode(node *GlobalVariableReadNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitGlobalVariableTargetNode(node *GlobalVariableTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitGlobalVariableWriteNode(node *GlobalVariableWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitHashNode(node *HashNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitHashPatternNode(node *HashPatternNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitIfNode(node *IfNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitImaginaryNode(node *ImaginaryNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitImplicitNode(node *ImplicitNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitImplicitRestNode(node *ImplicitRestNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInNode(node *InNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitIndexAndWriteNode(node *IndexAndWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitIndexOperatorWriteNode(node *IndexOperatorWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitIndexOrWriteNode(node *IndexOrWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitIndexTargetNode(node *IndexTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInstanceVariableAndWriteNode(node *InstanceVariableAndWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInstanceVariableOperatorWriteNode(node *InstanceVariableOperatorWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInstanceVariableOrWriteNode(node *InstanceVariableOrWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInstanceVariableReadNode(node *InstanceVariableReadNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInstanceVariableTargetNode(node *InstanceVariableTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInstanceVariableWriteNode(node *InstanceVariableWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitIntegerNode(node *IntegerNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInterpolatedMatchLastLineNode(node *InterpolatedMatchLastLineNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInterpolatedRegularExpressionNode(node *InterpolatedRegularExpressionNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInterpolatedStringNode(node *InterpolatedStringNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInterpolatedSymbolNode(node *InterpolatedSymbolNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitInterpolatedXStringNode(node *InterpolatedXStringNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitItLocalVariableReadNode(node *ItLocalVariableReadNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitItParametersNode(node *ItParametersNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitKeywordHashNode(node *KeywordHashNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitKeywordRestParameterNode(node *KeywordRestParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitLambdaNode(node *LambdaNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitLocalVariableAndWriteNode(node *LocalVariableAndWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitLocalVariableOperatorWriteNode(node *LocalVariableOperatorWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitLocalVariableOrWriteNode(node *LocalVariableOrWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitLocalVariableReadNode(node *LocalVariableReadNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitLocalVariableTargetNode(node *LocalVariableTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitLocalVariableWriteNode(node *LocalVariableWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitMatchLastLineNode(node *MatchLastLineNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitMatchPredicateNode(node *MatchPredicateNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitMatchRequiredNode(node *MatchRequiredNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitMatchWriteNode(node *MatchWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitMissingNode(node *MissingNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitModuleNode(node *ModuleNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitMultiTargetNode(node *MultiTargetNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitMultiWriteNode(node *MultiWriteNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitNextNode(node *NextNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitNilNode(node *NilNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitNoKeywordsParameterNode(node *NoKeywordsParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitNumberedParametersNode(node *NumberedParametersNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitNumberedReferenceReadNode(node *NumberedReferenceReadNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitOptionalKeywordParameterNode(node *OptionalKeywordParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitOptionalParameterNode(node *OptionalParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitOrNode(node *OrNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitParametersNode(node *ParametersNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitParenthesesNode(node *ParenthesesNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitPinnedExpressionNode(node *PinnedExpressionNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitPinnedVariableNode(node *PinnedVariableNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitPostExecutionNode(node *PostExecutionNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitPreExecutionNode(node *PreExecutionNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitProgramNode(node *ProgramNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRangeNode(node *RangeNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRationalNode(node *RationalNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRedoNode(node *RedoNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRegularExpressionNode(node *RegularExpressionNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRequiredKeywordParameterNode(node *RequiredKeywordParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRequiredParameterNode(node *RequiredParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRescueModifierNode(node *RescueModifierNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRescueNode(node *RescueNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRestParameterNode(node *RestParameterNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitRetryNode(node *RetryNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitReturnNode(node *ReturnNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitSelfNode(node *SelfNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitShareableConstantNode(node *ShareableConstantNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitSingletonClassNode(node *SingletonClassNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitSourceEncodingNode(node *SourceEncodingNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitSourceFileNode(node *SourceFileNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitSourceLineNode(node *SourceLineNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitSplatNode(node *SplatNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitStatementsNode(node *StatementsNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitStringNode(node *StringNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitSuperNode(node *SuperNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitSymbolNode(node *SymbolNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitTrueNode(node *TrueNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitUndefNode(node *UndefNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitUnlessNode(node *UnlessNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitUntilNode(node *UntilNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitWhenNode(node *WhenNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitWhileNode(node *WhileNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitXStringNode(node *XStringNode) {
	v.DefaultVisit(node)
}

func (v *BaseAbstractNodeVisitor) visitYieldNode(node *YieldNode) {
	v.DefaultVisit(node)
}
